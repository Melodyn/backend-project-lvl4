extends layout

mixin formBody(isEditPage)
    .form-group
        label(for='data_name')= t('task.field.name')
        input#data_name.form-control(
            class={
              'is-invalid': errors.name
            }
            name='data[name]'
            type='text'
            value=values.name
            required
        )
        .invalid-feedback #{errors.name}
    .form-group
        label(for='data_description')= t('task.field.description')
        textarea#data_description.form-control(
            class={
              'is-invalid': errors.description
            }
            name='data[description]'
            rows=3
        ) #{values.description}
        .invalid-feedback #{errors.description}
    .form-group
        label(for='data_statusId')= t('task.field.status')
        select#data_statusId.form-control(
            class={
              'is-invalid': errors.status
            }
            name='data[statusId]'
            required
        )
            option
            each status in statuses
              option(value=status.id selected=(values.statusId === status.id)) #{status.name}
        .invalid-feedback #{errors.status}
    .form-group
        label(for='data_executorId')= t('task.field.executor')
        select#data_executorId.form-control(
            class={
              'is-invalid': errors.executor
            }
            name='data[executorId]'
        )
            option
            each executor in executors
              option(value=executor.id selected=(values.executorId === executor.id)) #{executor.fullName()}
        .invalid-feedback #{errors.executor}
    .form-group
        label(for='data_labels')= t('task.field.labels')
        select#data_labels.form-control(
            class={
              'is-invalid': errors.labels
            }
            name='data[labels]'
            multiple
        )
            - const activeLabels = (values.labels || []).map(({ id }) => id);
            each label in labels
              option(value=label.id selected=activeLabels.includes(label.id)) #{label.name}
        .invalid-feedback #{errors.labels}
    input.btn.btn-primary(type='submit' value= t(isEditPage ? 'task.button.edit' : 'task.button.save'))


block content
    - const isEditPage = path.includes('edit');
    if (isEditPage)
        form(method='post' action=`/tasks/${values.id}`)
            input(type='hidden' name='_method' value='patch')
            +formBody(isEditPage)
    else
        form(method='post' action='/tasks')
            +formBody(isEditPage)
